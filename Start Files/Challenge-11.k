/* File: Challenge-11.k
 ---------------------------
Program Karel to place a single beeper at the center of 1st Street. The program
should finish its execution with Karel standing on a beeper.

Note that the final configuration of the world should have only a single beeper
at the midpoint of 1st Street. Along the way, Karel is allowed to place
additional beepers wherever it wants to, but must pick them all up
again before it finishes.

In solving this problem, you may count on the following:

• Karel starts at 1st Avenue and 1st Street, facing east, with an
infinite number of beepers in its bag.

• The initial state of the world includes no interior walls or beepers.

• The world need not be square, but you may assume that it is at least
as tall as it is wide.

• If the width of the world is odd, Karel must put the beeper in the
center square. If the width is even, Karel may drop the beeper on either
of the two center squares.

• It does not matter which direction Karel is facing at the end of the run.

There are many different algorithms you can use to solve this problem. The 
interesting challenge is to come up with a strategy that works.
*/
import "turns";

function moveToWall(){
	while(frontIsClear()){
		move();
	}
}

function nextBox(){
	move();
	turnLeft();
	move();
	turnRight();
	if(noBeepersPresent()){
		findMidPoint();	
	}
}

function findMidPoint(){
	while(noBeepersPresent()){
		putBeeper();
		move();
		if(frontIsBlocked()){
			turnLeft();
		}
	}
	nextBox();
}

function goToCenter(){
	if(frontIsBlocked()){
		turnAround();
		while(beepersPresent()){
			move();
		}
	}
	putBeeper();
	moveToWall();
}

function pickEmUp(){
	while(beepersPresent()){
		if(frontIsClear()){
			pickBeeper();
			move();
		}
	}
	turnAround();
	move();
	turnLeft();
	move();
}

function nextPickup(){
	turnRight();
	if(frontIsClear()){
		move();
		turnLeft();
	}
	repeat(4){
		pickEmUp();
	}
}

function pickUpAll(){
	while(beepersPresent()){
		pickBeeper();
		if(frontIsBlocked()){
			turnRight();
		}
		move();
	}
	nextPickup();
}

function returnToCenter(){
	turnRight();
	move();
}

function Solve(){
	findMidPoint();
	goToCenter();
	pickUpAll();
	returnToCenter();
}
























